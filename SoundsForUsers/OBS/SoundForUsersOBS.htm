<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <script src="soundconfig.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/comfy.js/dist/comfy.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/howler/2.2.1/howler.min.js"></script>
    <title></title>
</head>
<body>
    <script type="text/javascript">

        var mp3 = [];
        var isSoundPlaying = false;

        //Init ComfyJS to your Channels Chat
        if (globalConfig.oAuth == '<oAuth>')
            {
                ComfyJS.Init( boardCAST );
            } else {
                ComfyJS.Init( boardCAST, "oauth:" + globalConfig.oAuth );
            }

        ComfyJS.onJoin = (user, self, extra) => {
            console.log(user);
            //console.log (extra);        
            let Ind = clipsArray.findIndex((obj => obj.name == user));
            if (Ind != -1) {
                if (clipsArray[Ind].run == 0) {
                    If (clipsArray[Ind].file != '<SoundFileName>')
                        {
                            mp3.push(clipsArray[Ind].file);
                        }
                    console.log(clipsArray[Ind].file);
                    clipsArray[Ind].run = 1;
                    //Add Channel Icon Code here
                    if (globalConfig.oAuth != '<oAuth>')
                                {
                                    var Out = Welcome.replace(/@{user}/g,user);
                                    ComfyJS.Say(Out);
                                }
                }
            } else {
                if (Generic == 0) {
                    if (GenSndOn == true)
                    {
                        mp3.push(GenSnd);
                    }
                }
                Generic = Generic + 1;
                //console.log(user);
                if (GenSndOn == true)
                {
                    clipsArray.push({ name: user, file: GenSnd , run: 1 });
                }                
                if (Generic == GenericConst) {
                    Generic = 0;
                }
            }
        } 

        ComfyJS.onReward = ( user, reward, cost, message, extra ) => {            
            //console.log( user + " redeemed " + reward + " message: " + message)             
            var ward = reward;
            ward.toLowerCase();  
            let Ind = cmdRewardArray.findIndex((obj => obj.reward == ward));
                console.log(user + ':' + reward);
                if (Ind != -1) {   
                    var smsg;    
                    cmdOut = cmdRewardArray[Ind].command  
                    fileOut = cmdRewardArray[Ind].file
                    if (cmdRewardArray[Ind].cmdsay != '<Thing to Say Here>') 
                        {
                            smsg = cmdRewardArray[Ind].cmdsay.replace(/@{user}/g,user);
                            smsg = smsg.replace(/@{msg}/g,message);
                            console.log(smsg)
                        }   
                        else 
                        {
                            smsg = '<Thing to Say Here>';
                        }                 
                    cmdUserArray.push({command: cmdOut, file: fileOut, tuser: user, say: smsg})
                    //<Thing to Say Here>                        
                    if (globalConfig.oAuth != '<oAuth>' && cmdRewardArray[Ind].say != '<Thing to Say Here>')
                            {
                                var Out = cmdRewardArray[Ind].say.replace(/@{user}/g,user);
                                ComfyJS.Say(Out);
                            }
            }
        }

        ComfyJS.onCommand = (user, command, message, flags, extra) => {
            console.log(command)                        
            if (flags.broadcaster && command == 'wakeup' || flags.mod && command == 'wakeup') {
                Silence = 0;
                console.log('WAKE UP')
            }
            console.log(command);
            let soundFound = false;
            if (command == cmdMe) {
                soundFound = true;
                let Use = user;
                Use = Use.toLowerCase();
                console.log(Use);
                let Ind = clipsArray.findIndex((obj => obj.name == Use));
                console.log(Use);
                if (Ind != -1) {
                    console.log(clipsArray[Ind].run);
                    if (clipsArray[Ind].run <= MaxMe) {
                        if (clipsArray[Ind].file != '<SoundFileName>')
                            {
                                mp3.push(clipsArray[Ind].file);
                            }
                        console.log(clipsArray[Ind].file);
                        clipsArray[Ind].run += 1;
                    } else {
                        
                        if (globalConfig.oAuth != '<oAuth>')
                                {
                                    ComfyJS.Say("Sorry you reached your limit for today's stream.");
                                }
                        console.log('Limit Reached');
                    }
                }
            }
            if (flags.broadcaster && command == silent || flags.mod && command == silent) {
                location.reload();                
            }
            if (flags.broadcaster && command == quiet || flags.mod && command == quiet) {
                Silence = 1;
                soundFound = true;
            }
            if (flags.broadcaster && command == wakeup || flags.mod && command == wakeup) {
                Silence = 0;
                soundFound = true;
                //ComfyJS.Say("Wake THE FUCK Up Samurai!");
            }
            
            let cmdFound = false
           
            if (soundFound == false)
            {
                //Add a walk the array function to find if both Command and User are present
                //let Ix = cmdArray.findIndex((obj => obj.command == command));
                cmdRMTArray = [...cmdUserArray]//cmdUserArray
                var i = cmdRMTArray.findIndex(obj=>obj.command === command)
                cmdLMTArray = [];
                while (i !== -1) {
                    console.log(i)
                    cmdLMTArray.push(cmdRMTArray[i]);
                    cmdRMTArray.splice(i, 1);
                    console.log(cmdRMTArray)
                    i = cmdRMTArray.findIndex(obj=>obj.command === command)
                }   
                console.log(cmdLMTArray)             
                //let Use = user;
                //Use = Use.toLowerCase();
                console.log(user)
                let Inx = cmdLMTArray.findIndex((obj => obj.tuser === user.toLowerCase()));
                console.log(Inx)
                if (Inx !== -1)
                {   
                    console.log('Time:' + extra.sinceLastCommand.user)
                    if( extra.sinceLastCommand.user >= CoolUserDown || extra.sinceLastCommand.user === 0 )
                    {
                        console.log(cmdLMTArray[Inx].file)
                        if (cmdLMTArray[Inx].file != '<SoundFileName>')
                            {
                                mp3.push(cmdLMTArray[Inx].file);
                            }
                        soundFound = true;
                        if (globalConfig.oAuth != '<oAuth>' && cmdLMTArray[Inx].say != '<Thing to Say Here>')
                            {
                                let Out = cmdLMTArray[Inx].say.replace(/@{user}/g,user);
                                ComfyJS.Say(Out);
                                console.log(Out);
                            }
                    }
                }
            }
            if (soundFound == false)
            {
                let Inx = cmdArray.findIndex((obj => obj.command == command));
                if (Inx !== -1)
                {
                    cmdFound = true;
                    if (cmdArray[Inx].flag.match('broadcaster') && flags.broadcaster)
                    {
                        console.log("hey");
                        if (cmdArray[Inx].file != '<SoundFileName>')
                            {
                                mp3.push(cmdArray[Inx].file);
                            }
                        soundFound = true;
                        if (globalConfig.oAuth != '<oAuth>' && cmdArray[Inx].say != '<Thing to Say Here>')
                            {
                                let Out = cmdArray[Inx].say.replace(/@{user}/g,user);
                                ComfyJS.Say(Out);
                            }
                        //console.log(cmdArray[Inx].file);
                    } else if (cmdArray[Inx].flag.match('mod') && flags.mod)
                    {
                        if( extra.sinceLastCommand.user >= CoolModDown || extra.sinceLastCommand.user == 0 )
                        {
                                if (cmdArray[Inx].file != '<SoundFileName>')
                                    {
                                        mp3.push(cmdArray[Inx].file);
                                    }
                            soundFound = true;
                            if (globalConfig.oAuth != '<oAuth>' && cmdArray[Inx].say != '<Thing to Say Here>')
                            {
                                let Out = cmdArray[Inx].say.replace(/@{user}/g,user);
                                ComfyJS.Say(Out);
                            }
                            //console.log(cmdArray[Inx].file);
                        }
                    } else if (cmdArray[Inx].flag.match('vip') && flags.vip)
                    {
                        if( extra.sinceLastCommand.user >= CoolVIPDown || extra.sinceLastCommand.user == 0 ) {
                            if (cmdArray[Inx].file != '<SoundFileName>')
                             {
                                 mp3.push(cmdArray[Inx].file);
                             }
                            soundFound = true;
                            //console.log(cmdArray[Inx].file);
                            if (globalConfig.oAuth != '<oAuth>' && cmdArray[Inx].say != '<Thing to Say Here>')
                            {
                                let Out = cmdArray[Inx].say.replace(/@{user}/g,user);
                                ComfyJS.Say(Out);
                            }
                        }
                    } else if (cmdArray[Inx].flag.match('sub') && flags.subscriber)
                    {
                        if( extra.sinceLastCommand.user >= CoolSubDown || extra.sinceLastCommand.user == 0 ) {
                            if (cmdArray[Inx].file != '<SoundFileName>')
                             {
                                 mp3.push(cmdArray[Inx].file);
                             }
                            soundFound = true;
                            //console.log(cmdArray[Inx].file);
                            if (globalConfig.oAuth != '<oAuth>' && cmdArray[Inx].say != '<Thing to Say Here>')
                            {
                                let Out = cmdArray[Inx].say.replace(/@{user}/g,user);
                                ComfyJS.Say(Out);
                            }
                        }
                    }
                    else if (cmdArray[Inx].flag.match('all'))
                    {
                        //Cooldown
                        console.log('all')
                        soundFound = true;
                        console.log(extra.sinceLastCommand.any)
                        if( extra.sinceLastCommand.any >= CoolDown || extra.sinceLastCommand.user == 0 )
                            {
                                if (cmdArray[Inx].file != '<SoundFileName>')
                                    {
                                        mp3.push(cmdArray[Inx].file)
                                    }
                                if (globalConfig.oAuth != '<oAuth>' && cmdArray[Inx].say != '<Thing to Say Here>')
                                    {
                                        let Out = cmdArray[Inx].say.replace(/@{user}/g,user);
                                        ComfyJS.Say(Out);
                                    }                            
                            }
                    }                                
                }   
            } 
        }

        ComfyJS.onChat = (user, message, flags, self, extra) => {
            //console.log("On Chat!");
            //console.log(user);
            let Use = user;
            Use = Use.toLowerCase();
            let Ind = clipsArray.findIndex((obj => obj.name == Use));
            if (Ind != -1) {
                if (clipsArray[Ind].run == 0) {
                    if (clipsArray[Ind].file != '<SoundFileName>')
                        {
                            mp3.push(clipsArray[Ind].file);
                        }
                    console.log(Use + ': ' + clipsArray[Ind].file);
                    clipsArray[Ind].run = 1;
                    //Call Channel Icon Here
                    if (globalConfig.oAuth != '<oAuth>')
                                {
                                    var Out = Welcome.replace(/@{user}/g,user);
                                    ComfyJS.Say(Out);
                                }
                    //ComfyJS.Say("Welcome in my good friend, the Bark Lord is happy to see you @" + user);
                } else {
                    console.log("Already had your voice.")
                }
            }
        }

        ComfyJS.onHosted = (user, viewers, autohost, extra) => {
            console.log(user);
            //RanClip = Math.floor(Math.random() * clips.length);
            let selHost = Math.floor(Math.random() * cmdHost.length);
            if (cmdHost[selHost].file != '<SoundFileName>') 
            {    
                mp3.push(cmdHost[selHost].file)
            }
            if (globalConfig.oAuth != '<oAuth>')
                                {
                                    var Out = strHost.replace(/@{user}/g,user);
                                    ComfyJS.Say(Out);
                                }
        }

        function playSound(clip) {
            isSoundPlaying = true;
            var sound = new Howl({
                src: [clip]
            });
            sound.play();
            //console.log('Playing');
            //console.log('clip: ' + clip); 
            sound.on('end', function () {
                removeSound();
            });
        };

        setInterval(function () {
            if (mp3.length > 0 && Silence == 0) {
                console.log(isSoundPlaying);
                if (!isSoundPlaying) {
                    // console.log(mp3[0]);
                    playSound(mp3[0]);
                }
            }
            if (Silence != 0) {
                //paging = [];
                mp3 = [];
            }
            if (Generic > GenericConst)
            {
                Generic = 0;
            }
            if (Generic <= GenericConst && Generic > 0)
            {
                Generic = Generic + 1;
            } else if (Generic >= GenericConst)
            {
                Generic = 0;
            }
        }, 1000);

        function removeSound() {
            isSoundPlaying = false;
            //  commandType = commandType.slice(1);
            mp3 = mp3.slice(1);
            console.log("Clip Ended!");
        }

    </script>
</body >
</html >
